% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/jobs.R
\name{jobscript}
\alias{jobscript}
\title{Run code as RStudio background task}
\usage{
jobscript(
  code,
  filename,
  dir = NULL,
  workingDir = getwd(),
  exportEnv = .GlobalEnv,
  importEnv = TRUE,
  ...
)
}
\arguments{
\item{code}{\code{expression} to be written to file. Either one created with \link[rlang]{expr}, or provided wrapped in \code{\{\}}. If no code is provided, the clipboard will be read.}

\item{filename}{\code{character} filename}

\item{dir}{\code{character} vector of directories}

\item{workingDir}{The working directory in which to run the job. When \code{NULL} (the default),
the parent directory of the R script is used.}

\item{exportEnv}{The name of the environment in which to export the R objects created by the
job. Use \code{""} (the default) to skip export, \code{"R_GlobalEnv"}` to export to the
global environment, or the name of an environment object to create an object with that name.}

\item{importEnv}{Whether to import the global environment into the job.}

\item{...}{
  Arguments passed on to \code{\link[rstudioapi:jobRunScript]{rstudioapi::jobRunScript}}
  \describe{
    \item{\code{path}}{The path to the R script to be run.}
    \item{\code{name}}{A name for the background job. When \code{NULL} (the default), the filename of the
script is used as the job name.}
    \item{\code{encoding}}{The text encoding of the script, if known.}
  }}
}
\value{
\code{character} the path to the file invisibly and once the task completes, any code results (as would be returned if using the background tasks feature directly)
}
\description{
Write the code provided to \code{code} or copied to the clipboard to a file indicated by \code{filename} in the directory indicated by \code{dir} and run it as a background task in RStudio
}
\examples{
jobscript({
# long running code
Sys.sleep(10)
out <- "I returned"
}, filename = "ex.R", exportEnv = "R_GlobalEnv")
file.remove("ex.R")
}
